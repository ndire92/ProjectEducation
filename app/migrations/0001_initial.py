# Generated by Django 5.1.7 on 2025-03-08 17:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AireRecrutement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localite', models.CharField(max_length=200)),
                ('distance_km', models.FloatField(blank=True, null=True)),
                ('nombre_eleves_garcons', models.IntegerField(default=0)),
                ('nombre_eleves_filles', models.IntegerField(default=0)),
                ('total_eleves', models.IntegerField(default=0)),
                ('redoublants_garcons', models.IntegerField(default=0)),
                ('redoublants_filles', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='DivisionPedagogique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.CharField(max_length=100)),
                ('numero_salle', models.IntegerField(blank=True, null=True)),
                ('vacation', models.CharField(blank=True, choices=[('simple', 'Simple'), ('double', 'Double')], max_length=50, null=True)),
                ('multigrade', models.BooleanField(default=False)),
                ('double_flux', models.BooleanField(default=False)),
                ('age_6_ans', models.JSONField(blank=True, null=True)),
                ('age_7_ans', models.JSONField(blank=True, null=True)),
                ('age_8_ans', models.JSONField(blank=True, null=True)),
                ('total_eleves', models.IntegerField(blank=True, null=True)),
                ('redoublants', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ecole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('ouverte', models.BooleanField(default=True)),
                ('accessible_toute_annee', models.BooleanField()),
                ('eau_disponible', models.BooleanField()),
                ('type_eau', models.CharField(blank=True, max_length=50, null=True)),
                ('nb_postes_eau', models.IntegerField(blank=True, null=True)),
                ('electricite_disponible', models.BooleanField()),
                ('nb_classes_electrifiees', models.IntegerField(blank=True, null=True)),
                ('cantine_fonctionnelle', models.BooleanField()),
                ('nb_rationnaires', models.IntegerField(blank=True, null=True)),
                ('source_financement', models.CharField(blank=True, max_length=50, null=True)),
                ('laves_mains_disponibles', models.BooleanField()),
                ('nb_laves_mains', models.IntegerField(blank=True, null=True)),
                ('domaine_cloture', models.BooleanField()),
                ('type_cloture', models.CharField(blank=True, max_length=50, null=True)),
                ('espace_recreation_disponible', models.BooleanField()),
                ('superficie_recreation', models.FloatField(blank=True, null=True)),
                ('jardin_scolaire', models.BooleanField()),
                ('utilisation_jardin', models.CharField(blank=True, max_length=100, null=True)),
                ('nb_latrines_filles', models.IntegerField(blank=True, null=True)),
                ('nb_latrines_garcons', models.IntegerField(blank=True, null=True)),
                ('ape_existe', models.BooleanField()),
                ('femmes_ape', models.IntegerField(blank=True, null=True)),
                ('hommes_ape', models.IntegerField(blank=True, null=True)),
                ('activites_ape', models.TextField(blank=True, null=True)),
                ('comite_gestion_existe', models.BooleanField()),
                ('femmes_comite', models.IntegerField(blank=True, null=True)),
                ('hommes_comite', models.IntegerField(blank=True, null=True)),
                ('distance_centre_sante', models.FloatField(blank=True, null=True)),
                ('campagnes_sante', models.BooleanField()),
                ('boite_pharmacie_disponible', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='EquipementDidactique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regles', models.IntegerField(blank=True, null=True)),
                ('rapporteurs', models.IntegerField(blank=True, null=True)),
                ('cartes', models.IntegerField(blank=True, null=True)),
                ('bandes_dessinees', models.IntegerField(blank=True, null=True)),
                ('planches', models.IntegerField(blank=True, null=True)),
                ('compas', models.IntegerField(blank=True, null=True)),
                ('equerres', models.IntegerField(blank=True, null=True)),
                ('globes', models.IntegerField(blank=True, null=True)),
                ('litres', models.IntegerField(blank=True, null=True)),
                ('bon_etat', models.IntegerField(blank=True, null=True)),
                ('mauvais_etat', models.IntegerField(blank=True, null=True)),
                ('eleves_dotes', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinancesEcole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contributions_familles', models.FloatField(blank=True, null=True)),
                ('autres_contributions', models.FloatField(blank=True, null=True)),
                ('activites_generatrices_revenus', models.FloatField(blank=True, null=True)),
                ('construction_batiments', models.FloatField(blank=True, null=True)),
                ('renovation_batiments', models.FloatField(blank=True, null=True)),
                ('achat_mobilier', models.FloatField(blank=True, null=True)),
                ('renovation_mobilier', models.FloatField(blank=True, null=True)),
                ('achat_equipements_pedagogiques', models.FloatField(blank=True, null=True)),
                ('logement_enseignants', models.FloatField(blank=True, null=True)),
                ('salaires_personnel_enseignant', models.FloatField(blank=True, null=True)),
                ('salaires_personnel_autre', models.FloatField(blank=True, null=True)),
                ('cantine_scolaire', models.FloatField(blank=True, null=True)),
                ('financement_projets', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GuideEtManuel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.CharField(choices=[('1A', '1ère Année'), ('2A', '2ème Année'), ('3A', '3ème Année'), ('4A', '4ème Année'), ('5A', '5ème Année'), ('6A', '6ème Année')], max_length=10)),
                ('matiere', models.CharField(choices=[('lecture', 'Lecture'), ('calcul', 'Calcul'), ('science', 'Science'), ('histoire', 'Histoire'), ('geographie', 'Géographie'), ('education_islamique', 'Éducation Islamique'), ('instruction_civique', 'Instruction Civique')], max_length=100)),
                ('langue', models.CharField(choices=[('arabe', 'Arabe'), ('francais', 'Français')], max_length=50)),
                ('guides', models.IntegerField(blank=True, null=True)),
                ('manuels', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Local',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField()),
                ('affectation', models.CharField(max_length=200)),
                ('annee_mise_en_service', models.IntegerField(blank=True, null=True)),
                ('surface', models.FloatField(blank=True, null=True)),
                ('nature_murs', models.CharField(max_length=50)),
                ('etat_murs', models.CharField(choices=[('bon', 'Bon/Acceptable'), ('mauvais', 'Mauvais')], max_length=50)),
                ('nature_toit', models.CharField(max_length=50)),
                ('etat_toit', models.CharField(choices=[('bon', 'Bon/Acceptable'), ('mauvais', 'Mauvais')], max_length=50)),
                ('nature_sol', models.CharField(max_length=50)),
                ('etat_sol', models.CharField(choices=[('bon', 'Bon/Acceptable'), ('mauvais', 'Mauvais')], max_length=50)),
                ('etat_portes', models.CharField(choices=[('bon', 'Bon'), ('mauvais', 'Mauvais'), ('non_installe', 'Non installées')], max_length=50)),
                ('etat_fenetres', models.CharField(choices=[('bon', 'Bon'), ('mauvais', 'Mauvais'), ('non_installe', 'Non installées')], max_length=50)),
                ('source_financement', models.CharField(blank=True, choices=[('parents', 'Parents'), ('autres', 'Autres')], max_length=50, null=True)),
                ('observations', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LocaliteRurale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_acces', models.CharField(choices=[('route_goudronnee', 'Route goudronnée'), ('route_bitumee', 'Route bitumée'), ('accessible_tous_vehicules', 'Piste accessible à tous véhicules'), ('vehicule_tout_terrain', 'Piste accessible véhicule tout terrain'), ('uniquement_pied', 'Accessible uniquement à pied'), ('autre', 'Autre accès (à préciser)')], max_length=100)),
                ('autre_acces', models.TextField(blank=True, null=True)),
                ('electricite_disponible', models.BooleanField()),
                ('type_eau', models.CharField(choices=[('robinets', 'Robinets'), ('puits_cloture', 'Puits clôturés ou avec margelle'), ('puits_non_cloture', 'Puits non clôturés sans margelle'), ('citerne', 'Citerne'), ('eaux_surface', 'Fleuve, mare, marigot'), ('forage', 'Forage')], max_length=100)),
                ('service_sante_disponible', models.BooleanField()),
                ('type_service_sante', models.CharField(blank=True, choices=[('poste', 'Poste de santé'), ('unite_base', 'Unité de santé de base'), ('autres', 'Autres services de santé')], max_length=100, null=True)),
                ('mosquee_disponible', models.BooleanField()),
                ('mahadra_disponible', models.BooleanField()),
                ('bibliotheque_disponible', models.BooleanField()),
                ('terrain_sport_disponible', models.BooleanField()),
                ('autres_structures_animation', models.TextField(blank=True, null=True)),
                ('activites_dominantes', models.TextField()),
                ('type_marche', models.CharField(choices=[('permanent', 'Permanent'), ('hebdomadaire', 'Hebdomadaire'), ('absent', 'Pas de marché')], max_length=100)),
                ('projets_developpement_existent', models.BooleanField()),
                ('secteurs_intervention', models.TextField(blank=True, null=True)),
                ('bailleurs_ong', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MobilierEtEquipements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tables_maitre', models.IntegerField(blank=True, null=True)),
                ('bureaux_maitre', models.IntegerField(blank=True, null=True)),
                ('chaises_maitre', models.IntegerField(blank=True, null=True)),
                ('tableaux_noirs', models.IntegerField(blank=True, null=True)),
                ('tableaux_chevalets', models.IntegerField(blank=True, null=True)),
                ('armoires_bibliotheques', models.IntegerField(blank=True, null=True)),
                ('machines_a_ecrire', models.IntegerField(blank=True, null=True)),
                ('projecteurs_diapos', models.IntegerField(blank=True, null=True)),
                ('ordinateurs', models.IntegerField(blank=True, null=True)),
                ('calculatrices', models.IntegerField(blank=True, null=True)),
                ('bon_etat', models.IntegerField(default=0)),
                ('mauvais_etat', models.IntegerField(default=0)),
                ('tables_bancs_1_place', models.IntegerField(blank=True, null=True)),
                ('tables_bancs_2_places', models.IntegerField(blank=True, null=True)),
                ('tables_bancs_4_places', models.IntegerField(blank=True, null=True)),
                ('besoins_places_assises', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MobiliteEleves',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_etablissement', models.CharField(max_length=200)),
                ('localite_origine', models.CharField(max_length=200)),
                ('pays_origine', models.CharField(blank=True, max_length=100, null=True)),
                ('statut_scolarisation', models.CharField(choices=[('scolarisé', 'Scolarisé'), ('non_scolarisé', 'Non scolarisé'), ('origine_inconnue', 'Origine inconnue')], max_length=50)),
                ('nombre_garcons', models.IntegerField(default=0)),
                ('nombre_filles', models.IntegerField(default=0)),
                ('total_redoublants', models.IntegerField(default=0)),
                ('total_eleves', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='NouveauxInscrits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('situation_prescolaire', models.CharField(max_length=100)),
                ('nombre_garcons', models.IntegerField()),
                ('nombre_filles', models.IntegerField()),
                ('total_inscrits', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ObservationEventuelle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('date_creation', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('genre', models.CharField(choices=[('H', 'Homme'), ('F', 'Femme')], max_length=1)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('fonction', models.CharField(max_length=200)),
                ('niveau_formation', models.CharField(blank=True, max_length=200, null=True)),
                ('formation_continue', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StatistiqueGenerale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee_scolaire', models.CharField(max_length=10)),
                ('total_inscrits', models.IntegerField(default=0)),
                ('total_redoublants', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StructurePedagogique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('division', models.CharField(max_length=100)),
                ('nombre_divisions', models.IntegerField()),
                ('nombre_eleves_garcons', models.IntegerField()),
                ('nombre_eleves_filles', models.IntegerField()),
                ('total_eleves', models.IntegerField()),
                ('redoublants_garcons', models.IntegerField()),
                ('redoublants_filles', models.IntegerField()),
                ('total_redoublants', models.IntegerField()),
                ('multigrade', models.BooleanField(default=False)),
                ('double_flux', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SignatureEtCachet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_signataire', models.CharField(max_length=200)),
                ('fonction_signataire', models.CharField(choices=[('directeur', "Directeur de l'école"), ('inspecteur', 'Inspecteur départemental'), ('directeur_regional', 'Directeur régional')], max_length=100)),
                ('date_signature', models.DateField()),
                ('cachet_present', models.BooleanField(default=False)),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signatures', to='app.observationeventuelle')),
            ],
        ),
    ]
